---
name: CI

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
  push:
    branches:
      - 'main'
      - 'feature/**'
      - 'fix/**'
      - '!doc/**'
  pull_request:
    branches:
      - 'main'
      - 'feature/**'
      - 'fix/**'
      - '!doc/**'

env:
  COLLECTION_NAMESPACE: bodsch
  COLLECTION_NAME: prometheus

jobs:
  services:
    name: "${{ matrix.image }} / ${{ matrix.collection_role }} / ${{ matrix.ansible-version }} / ${{ matrix.python_version }}"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
          - debian:12
        ansible-version:
          - '6.7'
        python_version:
          - "3.10.11"
          - "3.11.3"
        scenario:
          - default
        collection_role:
          - alertmanager
          - am_silence
          - docker_sd
          - promcheck
          - prometheus
          - pushgateway
          - trickster
    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python_version }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: Install collection
        run: |
          make \
            install

      - name: test with tox
        run: |
          make \
            test \
              -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
              -e DISTRIBUTION="${{ matrix.image }}" \
              -e COLLECTION_ROLE="${{ matrix.collection_role }}" \
              -e COLLECTION_SCENARIO="${{ matrix.scenario }}"
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  exporters:
    name: "${{ matrix.image }} / ${{ matrix.collection_role }} / ${{ matrix.ansible-version }} / ${{ matrix.python_version }}"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
          - debian:12
        ansible-version:
          - '6.7'
        python_version:
          - "3.10.11"
          - "3.11.3"
        scenario:
          - default
        collection_role:
          - blackbox_exporter
          - json_exporter
          - mongodb_exporter
          - mysql_exporter
          - nginx_exporter
          - node_exporter
          - node_exporter_textfile_collectors
          - redis_exporter
          - ssl_exporter
    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python_version }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: Install collection
        run: |
          make \
            install

      - name: test with tox
        run: |
          make \
            test \
              -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
              -e DISTRIBUTION="${{ matrix.image }}" \
              -e COLLECTION_ROLE="${{ matrix.collection_role }}" \
              -e COLLECTION_SCENARIO="${{ matrix.scenario }}"
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}
